---
import Layout from "../layouts/Layout.astro";
import { contentfulClient } from "../lib/contentful";
import type { Asset } from "contentful";
import type { RecipePost, Categories, Person } from "../lib/contentful";
import { marked, lexer, parse } from "marked";
import { Schema } from "astro-seo-schema";
import { formatDate } from "../services/formatDate";
import Category from "../components/Category.astro";
import RelatedPost from "../components/RelatedPost.astro";
import { getRelatedPosts } from "../lib/getRelatedPosts";

export async function getStaticPaths() {
  const allPosts = await contentfulClient.getEntries<RecipePost>({
    content_type: "recipe",
  });
  const pages = allPosts.items.map((item) => ({
    params: { slug: item.fields.slug },
    props: {
      title: item.fields.title,
      description: parse(item.fields.description),
      featuredImage: item.fields.featuredImage?.fields?.file?.url,
      categories: item.fields.categories.map(({ fields }) => fields),
      author: item.fields.author?.fields,
      publishDate: formatDate(item.fields.publishDate),
      excerpt: item.fields.excerpt,
      contentTokens: lexer(item.fields.description),
      relatedPosts: getRelatedPosts(
        allPosts.items,
        item.fields.slug,
        item.fields.categories
      ),
    },
  }));
  return pages;
}

const tokens = Astro.props.contentTokens;

const headingIngredientsIndex = tokens.findIndex((token) => {
  return token?.raw?.toLowerCase().includes("ingredien");
});
const ingredients = tokens[headingIngredientsIndex + 1].items;

const headingPreparationIndex = tokens.findIndex((token) => {
  return token?.raw?.toLowerCase().includes("preparaci");
});
const steps = tokens[headingPreparationIndex + 1].items;

const {
  description,
  title,
  publishDate,
  categories,
  featuredImage,
  author,
  relatedPosts,
  excerpt,
} = Astro.props;
---

<Layout title={title}>
  <Schema
    item={{
      "@context": "https://schema.org",
      "@type": "Recipe",
      name: title,
      author: {
        "@type": "Person",
        name: author,
      },
      datePublished: publishDate,
      description: excerpt,
      image: featuredImage,
      recipeCategory: categories.map(
        (category: Categories["fields"]) => category.name
      ),
      recipeIngredient: ingredients?.map((ingredient) => ingredient.text),
      recipeInstructions: steps?.map((step) => {
        return {
          "@type": "HowToStep",
          text: marked(step?.text),
        };
      }),
    }}
  />
  <main class="pt-8 pb-16 lg:pt-16 lg:pb-24 bg-white dark:bg-gray-900">
    <div class="flex justify-between px-4 mx-auto max-w-screen-xl">
      <article
        class="mx-auto w-full max-w-2xl format format-sm sm:format-base lg:format-lg format-blue dark:format-invert"
      >
        <header class="mb-4 lg:mb-6 not-format">
          <ul class="flex items-center gap-2 mb-4">
            {
              categories.map((category: Categories["fields"]) => (
                <li>
                  <Category
                    name={category?.name}
                    href={`/category/${category.slug}`}
                  />
                </li>
              ))
            }
          </ul>
          <h1
            class="mb-4 text-3xl font-extrabold leading-tight text-gray-900 lg:mb-6 lg:text-5xl dark:text-white"
          >
            {title}
          </h1>
          <img
            src={featuredImage}
            alt={title}
            class="rounded-lg object-cover max-h-80 w-full mb-7"
          />
          <address class="flex not-italic items-baseline mb-14">
            <p class="text-base font-light text-gray-500 dark:text-gray-400">
              <a
                href={`/author/${author?.slug}`}
                rel="author"
                class="underline hover:text-primary-700"
                title=`Ver recetas de ${author?.name}`
              >
                {author?.name}
              </a>
              <time pubdate datetime="2022-02-08" title="February 8th, 2022">
                en {publishDate}</time
              >
            </p>
          </address>
        </header>
        <div set:html={description} />
      </article>
    </div>
  </main>
  {
    relatedPosts.length < 1 ? (
      ""
    ) : (
      <aside
        aria-label="Related articles"
        class="py-8 lg:py-24 bg-gray-50 dark:bg-gray-800"
      >
        <div class="px-4 mx-auto max-w-screen-xl">
          <h2 class="mb-8 text-2xl font-bold text-gray-900 dark:text-white">
            MÃ¡s recetas
          </h2>
          <div class="grid gap-12 sm:grid-cols-2 lg:grid-cols-4">
            {relatedPosts?.map((post) => (
              <RelatedPost
                title={post?.fields?.title}
                imageUrl={post?.fields?.featuredImage.fields.file.url}
                excerpt={post?.fields?.excerpt}
                href={`/${post.fields.slug}`}
              />
            ))}
          </div>
        </div>
      </aside>
    )
  }
</Layout>
